@model Connectify.Models.Group
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

<h2>@Model.GroupName</h2>
<br />

<!-- card pentru informatiile grupului -->
<div class="container mt-4">
    <div class="card">
        <div class="card-header text-center">
            <h3>@Model.GroupName</h3>
        </div>
        <div class="card-body text-center">
            <p>@Model.Description</p>

            @{
                // verificam daca userul este deja parte din grup
                var currentUser = User.Identity.IsAuthenticated ? await UserManager.GetUserAsync(User) : null;
            }

            
            @if (User.IsInRole("Admin") || (currentUser != null && currentUser.Id == Model.UserId))
            {
                <div class="d-flex justify-content-center mt-3 gap-3">
                    <a class="btn btn-primary" asp-action="Edit" asp-controller="Groups" asp-route-id="@Model.Id">Edit Group</a>
                    <form asp-action="Delete" asp-controller="Groups" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this group?');">
                        <button type="submit" class="btn btn-danger">Delete Group</button>
                    </form>
                </div>
            }
        </div>
    </div>

    <!-- separator -->
    <hr class="my-4" />

    <!-- card pentru mesaje -->
    <h3 class="text-center">Group Messages</h3>
    <div class="card">
        <div class="card-body">
            @if (Model.Messages != null && Model.Messages.Any())
            {
                @foreach (var mess in Model.Messages)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <p><strong>@mess.User?.UserName:</strong> @mess.TextMessage</p>
                            <p><small class="text-muted">Sent at: @mess.SentAt.ToString("yyyy-MM-dd HH:mm")</small></p>

                            @if (User.IsInRole("Admin") || (currentUser != null && currentUser.Id == mess.UserId))
                            {
                                <div class="d-flex justify-content-end gap-2">
                                    <a class="btn btn-secondary btn-sm" asp-action="Edit" asp-controller="Messages" asp-route-id="@mess.Id">Edit</a>
                                    <form asp-action="Delete" asp-controller="Messages" asp-route-id="@mess.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this message?');">
                                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center">No messages found in this group.</p>
            }
        </div>
    </div>

    <!-- separator pentru adaugarea unui mesaj -->
    <hr class="my-4" />

    <!-- card mesaj nou -->
    <div class="card">
        <div class="card-header">
            <h5>Send a New Message</h5>
        </div>
        <div class="card-body">
            <form method="post" asp-action="Show" asp-controller="Groups" asp-route-id="@Model.Id">
                <div class="form-group">
                    <input type="hidden" name="GroupId" value="@Model.Id" />
                    <label for="TextMessage">Message Content</label>
                    <textarea class="form-control" name="TextMessage" id="TextMessage" placeholder="Type your message here..." required></textarea>
                    @Html.ValidationMessage("TextMessage", null, new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-primary mt-3">Send Message</button>
            </form>
        </div>
    </div>
</div>
